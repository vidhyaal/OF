import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";


import { useState, useEffect } from "react";
interface ITransactionDetails {
    status: string;
    card_fetch_token: string;
    id:string;
    amount: Number;
    currency: string;
    
  }

  interface ICardDetails {
    provider: string;
    card_reference_id: string;
    card_number:string;
    expiry_year: string;
    expiry_month: string;
    redacted_number: string
    
  }

const MerchantDashboard: NextPage = () => {
  const [accessToken, setAccessToken] = useState("");
  const [lastTransaction, SetLastTransaction] = useState<ITransactionDetails>({status: "", card_fetch_token :"", id:"", amount : 0, currency:""});
  const [cardDetails, SetCardDetails] = useState<ICardDetails>({provider:"",card_reference_id:"",card_number:"",expiry_year:"",expiry_month:"",redacted_number:""});
  const [showCardDetailsBlock, SetShowCardDetailsBlock] = useState(true);
  const [showTable, SetShowTable] = useState(true);

  const getLastTransaction = (access_token: string) => {
    // @ts-ignore
    const lastTransaction = JSON.parse(localStorage.getItem("last_transaction"))
    fetch("api/getTransactions", {
        method: "POST", // or 'PUT'
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          transactionId: JSON.parse(lastTransaction).id,
          token: access_token,
        }),
      })
        .then((response) => response.json())
        .then(({ data }) => {
            SetLastTransaction(JSON.parse(data))
            SetShowTable(false)
        });
  }

  const getToken = () => {
    fetch("/api/token")
      .then((response) => response.json())
      .then(({ access_token }) => {
        setAccessToken(access_token);
        getLastTransaction(access_token)
      });
  };

  const getCardDetails = () => {
   
    if(lastTransaction?.card_fetch_token) {
    fetch("api/fetchCardDetails", {
      method: "POST", // or 'PUT'
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ accessToken: accessToken, cardToken: lastTransaction?.card_fetch_token }),
    })
      .then((response) => response.json())
      .then((data) => {
        SetCardDetails(JSON.parse(data.data));
        SetShowCardDetailsBlock(false)
        let d = JSON.parse(data.data);
        if(d.error_code) {
            alert("Token Expired - try payment again")
        }
      })
      .catch((error) => {
        console.error("Error:", error);
      });
    }else {
      alert("Card fetch token not found !")
    }

  };
  useEffect(() => {
    getToken();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Merchant - Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
          rel="stylesheet"
        />
      </Head>

      <div className="container mt-2">
        <h4 className="mb-3">
          <strong>MerchantDashboard</strong>
        </h4>
        <div className="row">
            <div className="col">
           
                <table  className={showTable ? styles.hidden : "table"}>
                    <thead>
                    <tr>
                        <td>Id</td>
                        <td>status</td>
                        <td>currency</td>
                        <td>Amount</td>
                        <td>Actions</td>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>{lastTransaction? lastTransaction.id : ""}</td>
                        <td>{lastTransaction? lastTransaction.status: ""}</td>
                        <td>{lastTransaction? lastTransaction.currency: ""}</td>
                        <td>{lastTransaction? lastTransaction.amount: ""}</td>
                        <td><button type="button" className="btn btn-outline-primary" onClick={() => getCardDetails()}>Get Card Details</button></td>
                    </tr>
                    </tbody>
                </table>
               
                <div className={showCardDetailsBlock ? styles.hidden : undefined}>
 
                <div className="row">
                    <div className="col-3">provider :</div>
                    <div className="col-3">{cardDetails.provider}</div>
                </div>
                <div className="row">
                    <div className="col-3">card_reference_id :</div>
                    <div className="col-3">{cardDetails.card_reference_id}</div>
                </div>
                <div className="row">
                    <div className="col-3">card_number :</div>
                    <div className="col-3">{cardDetails.card_number}</div>
                </div>
                <div className="row">
                    <div className="col-3">expiry_year :</div>
                    <div className="col-3">{cardDetails.expiry_year}</div>
                </div>
                <div className="row">
                    <div className="col-3">expiry_month :</div>
                    <div className="col-3">{cardDetails.expiry_month}</div>
                </div>
                <div className="row">
                    <div className="col-3">redacted_number :</div>
                    <div className="col-3">{cardDetails.redacted_number}</div>
                </div>
                </div>
              
            </div>
        </div>
     
      </div>
    </div>
  );
};

export default MerchantDashboard;
